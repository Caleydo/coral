import { ICohort } from '../../CohortInterfaces';
import { IAttribute } from '../../data/Attribute';
import { ATask } from './ATask';
export declare class Prevalence extends ATask {
    label: string;
    id: string;
    hasOutput: boolean;
    supports(attributes: IAttribute[], cohorts: ICohort[]): boolean;
    showSearchBar(): boolean;
    private prevalencePacks;
    private baseCohort;
    private baseCohortSize;
    private cbExclMissingVal;
    private excludeMissingValues;
    static readonly EXCL_MISSING_VAL_TEXT = "excl. missing values";
    static readonly INCL_MISSING_VAL_TEXT = "incl. missing values";
    static readonly INITIAL_CHT_LABEL = "Initial Cohort";
    static readonly TASK_OPTION_LABEL = "Applicable Tasks";
    private currentState;
    show(columnHeader: HTMLDivElement, container: HTMLDivElement, attributes: IAttribute[], cohorts: ICohort[]): void;
    private addCheckboxForMissingValues;
    private changeMissingValueInclusion;
    private createPrevalenceCohortPack;
    private createCohortAndTasksConfig;
    private addPackElements;
    private createLegendItem;
    private createBarStructure;
    private createClickableTasks;
    private addMouseEventListernersToElements;
    handleOptionSelectionChange(chtIndex: number, clickedTask: HTMLDivElement): Promise<void>;
    private updatePrevalencePack;
    private startBarLoadingAnimation;
    private startTaskLoadingAnimation;
    private stopBarLoadingAnimation;
    private stopTaskLoadingAnimation;
    private updateBars;
    private setBaseCohort;
    close(): void;
}
