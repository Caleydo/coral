

.tourdino {
  display: grid;
  grid-template-rows: 1fr auto;
  grid-template-columns: 1fr 1fr;
  column-gap: 120px; // a bit more than the width of a 45° rotated table column header

  table {

    $wide-col-padding: 0.5em;
    $narrow-col-padding: 0.2em;
    $col-min-size: 4.5ch;
    $col-max-size: 15em;
    $table-border-color: white; 


    .head-desc {
      z-index: -1; // above td elements
      background-color: white;
      header {
        font-size: 1.2em;
      }
      
      p {
        font-weight: normal;
      }
    }

    table-layout: fixed; // The table and column widths are set by the widths of table and col or by the width of the first row of cells. Cells in other rows do not affect column widths.

    tbody.bottom-margin {
      border-bottom: 0.5em solid $table-border-color;  // table's border spacing applies to all rows and tbody has no margin
    }

    th {
      min-width: $col-min-size;
      max-width: $col-min-size;
      position: sticky;      
      top: 0;
      z-index: 2;

      &:not(.head) { // cells of row labels in header
        min-width: $col-max-size*0.7; //flexible from min to max
        max-width: $col-max-size;
        padding: 0 $wide-col-padding;
        background-color: white; 
      }

      &.head {

        &.rotate { // adapted from https://css-tricks.com/rotated-table-column-headers/ (licencs: https://css-tricks.com/license/)
          height:120px;

          svg {
            position: absolute;
            top: 0;
            left: 0;

            polygon {
              fill: white;
            }
          }

          > div {
            transform: translate(12px,48px) //3. Back to the correct position
                       rotate(-45deg)       //2. Rotate to correct angle
                       skew(45deg,0deg);    //1. skew the div, so that the background is correct (text content is unskewed below)
            width: 30px;

            > span {
              position: relative;
              display: inline-block;  // to set a width
              min-width: 165px;
              max-width: 165px;
              box-sizing: border-box; // i dont want to mess with the padding

              padding-bottom: 0px;
              padding-top: 1px;
              line-height: 1.25; //defines height of headers
              border-bottom: 2px solid $table-border-color; //make space between headers non-transparent (removed for last header below)
              background-color: white; 

              > span {
                transform: skew(-45deg,0deg); //unskew the text

                max-width: 100%; // just as wide as the parent
                display: inline-block; // to make width & string truncation work
                vertical-align: bottom; // at the bottom of the parent
                overflow: hidden; // important to stop text at right border
                white-space: nowrap; // no line breaks
                text-overflow: ellipsis;
                font-weight: normal;

                box-sizing: border-box; // i dont want to mess with the padding
                padding: 0.1em 0.5em 0.1em 1.5em;
              }
            }
          }

          &:last-child > div > span{
            border-bottom: none; // no need for a border on last header
          }
        }
      }


    }

    .cross-selection, .cross-selection::before, .cross-selection span::before  {
      background-color: $color-hover !important; // important because to overwrite the htmml inline color definition
      color: black !important;
    }

    td {
      border: 1px solid $table-border-color;
      border-collapse: collapse;
      position: relative;
      background: white;
      background-clip: padding-box; // fix firefox bug: td background stretches over tbody border

      &[rowspan] {
        vertical-align: text-top; // move text of multi-row cells to the top
      }

      &:not(.score) { // row labels
        min-width: $col-max-size*0.7;
        max-width: $col-max-size;
        padding: 0 $wide-col-padding;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }

      &.score {
        // no min-width here because than the cell gets larger on hover (wich makes the text bolder)
        max-width: $col-min-size;
        text-align: center; // padding workaround, because we make the font bolder on hover and can use the whitespace of the cell this way
        overflow: hidden;
        text-overflow: clip; // cells are so small, the ... would take to much space
        white-space: nowrap;

        // border-style: solid;
        // border-color: $table-border-color;
        // border-width: 0px; // overwrite the default
        // border-right-width: 1px; // just on the right
      }

      &.action, &.score {
        cursor: pointer;
        vertical-align: bottom; // Actually, it should be middle, but bottom looks more centered ¯\_(ツ)_/¯

        &:hover, &:focus { // = td.action:hover
          background-color: $color-hover !important; // important because to overwrite the htmml inline color definition
          color: black !important;
          font-weight: bolder;
        }

        &.selectedCell {
          background-color: $color-selected !important; // important because to overwrite the htmml inline color definition
          color: black !important;
          font-weight: bolder;
        }
      }

      span.circle {
        display: inline-block;
        width: 0.8em;
        height: 0.8em;
        vertical-align: middle;
        background-color: $color-text;
        border: 1px solid transparent;
        border-radius: 100%;
      }
    }
  }


  .details {

    .detailDiv {
      font-weight: bold;

      span {
        font-weight: normal;

        &.detail-label {
          font-weight: bold;
        }
      }
    }

    svg {
      // generic axes styles
      path,
      .axis path,
      line,
      .axis line {
        fill: none;
        stroke-width: 1;
        stroke: black;
        shape-rendering: crispEdges;
      }
    }


     // ------ boxplot with D3
     g.box-element text {
      stroke: none;
      fill: black;
    }

    g.box-element {
      rect.box {
        stroke: black;
        stroke-width: 1;
        stroke-opacity: 0;
        fill-opacity: .5;
      }
      line.center, line.median, line.whisker{
        stroke-opacity: 0.2;
      }
    }

    g.box-element.selected {
      rect.box{
        stroke: black;
        stroke-width: 1;
        stroke-opacity: 1;
        fill-opacity: 1;
      }
      line.center, line.median, line.whisker{
        stroke-opacity: 1;
      }
    }
  }
}